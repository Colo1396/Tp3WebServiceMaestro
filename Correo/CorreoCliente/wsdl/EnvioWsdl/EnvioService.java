
package EnvioWsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EnvioService", targetNamespace = "http://services.soap.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EnvioService {


    /**
     * 
     * @param idUsuario
     * @param orden
     * @return
     *     returns java.util.List<EnvioWsdl.Envio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerAllMisDespachos", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.TraerAllMisDespachos")
    @ResponseWrapper(localName = "traerAllMisDespachosResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.TraerAllMisDespachosResponse")
    public List<Envio> traerAllMisDespachos(
        @WebParam(name = "idUsuario", targetNamespace = "")
        int idUsuario,
        @WebParam(name = "orden", targetNamespace = "")
        String orden);

    /**
     * 
     * @param id
     * @return
     *     returns EnvioWsdl.Envio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.FindByIdResponse")
    public Envio findById(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param envio
     * @param estado
     * @return
     *     returns EnvioWsdl.Envio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEstadoEnvio", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.UpdateEstadoEnvio")
    @ResponseWrapper(localName = "updateEstadoEnvioResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.UpdateEstadoEnvioResponse")
    public Envio updateEstadoEnvio(
        @WebParam(name = "envio", targetNamespace = "")
        Envio envio,
        @WebParam(name = "estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param orden
     * @param dni
     * @return
     *     returns java.util.List<EnvioWsdl.Envio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "traerAllMisPedidos", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.TraerAllMisPedidos")
    @ResponseWrapper(localName = "traerAllMisPedidosResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.TraerAllMisPedidosResponse")
    public List<Envio> traerAllMisPedidos(
        @WebParam(name = "dni", targetNamespace = "")
        int dni,
        @WebParam(name = "orden", targetNamespace = "")
        String orden);

    /**
     * 
     * @param estado
     * @param idEnvio
     * @return
     *     returns EnvioWsdl.Envio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEstadoEnvioXId", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.UpdateEstadoEnvioXId")
    @ResponseWrapper(localName = "updateEstadoEnvioXIdResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.UpdateEstadoEnvioXIdResponse")
    public Envio updateEstadoEnvioXId(
        @WebParam(name = "idEnvio", targetNamespace = "")
        int idEnvio,
        @WebParam(name = "estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.DeleteResponse")
    public String delete(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns java.util.List<EnvioWsdl.Envio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.FindAllResponse")
    public List<Envio> findAll();

    /**
     * 
     * @param envio
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.CreateResponse")
    public String create(
        @WebParam(name = "envio", targetNamespace = "")
        Envio envio);

    /**
     * 
     * @param envio
     * @return
     *     returns EnvioWsdl.Envio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://services.soap.com/", className = "EnvioWsdl.UpdateResponse")
    public Envio update(
        @WebParam(name = "envio", targetNamespace = "")
        Envio envio);

}
